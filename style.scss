/**
 * Grid Block styles.
 * These styles are loaded into both the editor, and the frontend.
 */

@import './constants.scss';

/**
 * Individual Column Options
 */

.wp-block-gutengrid-editor .wp-block-gutengrid-column,
.wp-block-gutengrid .wp-block-gutengrid-column {

	// When a column has a background color, we add negative margins to enable
	// some of the gutter to work as default padding.
	&.has-background {
		margin-left: -1px;
		margin-right: -1px;
		padding-left: 1px;
		padding-right: 1px;

		// This hack uncollapses the margins, which is important for the background color.
		padding-top: .05px;
		padding-bottom: .05px;
	}

	// Additional, user-set paddings.
	// Apply both gutter padding and user-set padding, when a background is also set.
	&.wp-block-gutengrid__padding-none {
		padding: 0px;

		&.has-background {
			padding: 0px (0px + 1px);

			// Needs a max-width in order to constrain contents.
			max-width: calc(100% + #{ (0px + 1px) * 2 });
		}
	}


}


/**
 * Parent column alignment
 */

.wp-block-gutengrid {
	&.are-vertically-aligned-top {
		align-items: flex-start;
	}

	&.are-vertically-aligned-center {
		align-items: center;
	}

	&.are-vertically-aligned-bottom {
		align-items: flex-end;
	}
}


/**
 * Individual column alignment
 */

.wp-block-gutengrid-column {

	// Allow top-aligned columns to span the full height.
	&.is-vertically-aligned-top {
		align-self: flex-start;
		height: 100%;
	}

	&.is-vertically-aligned-center {
		align-self: center;
	}

	&.is-vertically-aligned-bottom {
		align-self: flex-end;
	}
}

.wp-block-gutengrid-grid {
	position: relative;

	>* {
		z-index: 1;
	}

	>.wp-block-group {
		height: 100%;
	}

}

.gutengrid-background {
	grid-row: 1 / -1;
	height: 100%;

	&__wrapper {
		width: 100%;
		height: 100%;
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		pointer-events: none;
		display: grid;
		z-index: 0 !important;
		align-content: stretch !important;
	}
}

// t-pad-* for tablet
// m-pad-* for mobile
$tablet: '1199px';
$mobile: '767px';

.d-pad-vert-s {
	padding: 80px 0;
	@media(max-width: $tablet) {
		padding: 40px 0;
	}
	@media(max-width: $mobile) {
		padding: 20px 0;
	}
}

.d-pad-vert-m {
	padding: 115px 0;
	@media(max-width: $tablet) {
		padding: 60px 0;
	}
	@media(max-width: $mobile) {
		padding: 30px 0;
	}
}

.d-pad-vert-l {
	padding: 155px 0;
	@media(max-width: $tablet) {
		padding: 80px 0;
	}
	@media(max-width: $mobile) {
		padding: 40px 0;
	}
}


@media(max-width: $tablet) {
	.t-pad-s {
		padding: 40px 0 !important;
	}

	.t-pad-m {
		padding: 60px 0 !important;
	}

	.t-pad-l {
		padding: 80px 0 !important;
	}
}

@media(max-width: $mobile) {
	.m-pad-s {
		padding: 20px 0 !important;
	}

	.m-pad-m {
		padding: 30px 0 !important;
	}

	.m-pad-l {
		padding: 40px 0 !important;
	}
}

.d-self-align-center {
	align-self: center;
}

.d-self-align-start {
	align-self: flex-start;
}

.d-self-align-end {
	align-self: flex-end;
}

.d-self-align-stretch {
	align-self: stretch;
}

@media(max-width: $tablet) {
	.t-self-align-center {
		align-self: center;
	}

	.t-self-align-start {
		align-self: flex-start;
	}

	.t-self-align-end {
		align-self: flex-end;
	}

	.t-self-align-stretch {
		align-self: stretch;
	}
}

@media(max-width: $mobile) {
	.m-self-align-center {
		align-self: center;
	}

	.m-self-align-start {
		align-self: flex-start;
	}

	.m-self-align-end {
		align-self: flex-end;
	}

	.m-self-align-stretch {
		align-self: stretch;
	}
}

.d-self-justify-center {
	justify-self: center;
}

.d-self-justify-start {
	justify-self: flex-start;
}

.d-self-justify-end {
	justify-self: flex-end;
}

.d-self-justify-stretch {
	justify-self: stretch;
}

@media(max-width: $tablet) {
	.t-self-justify-center {
		justify-self: center;
	}

	.t-self-justify-start {
		justify-self: flex-start;
	}

	.t-self-justify-end {
		justify-self: flex-end;
	}

	.t-self-justify-stretch {
		justify-self: stretch;
	}
}

@media(max-width: $mobile) {
	.m-self-justify-center {
		justify-self: center;
	}

	.m-self-justify-start {
		justify-self: flex-start;
	}

	.m-self-justify-end {
		justify-self: flex-end;
	}

	.m-self-justify-stretch {
		justify-self: stretch;
	}
}