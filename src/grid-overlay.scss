@import '../constants.scss';

/**
 * Visual grid overlay
 */

.wpcom-overlay-grid {
	// The following rules are for Safari.
	// A CSS grid rendering issue means the child nodes of this grid
	// won't stretch to fit the vertical space, unless the position
	// property is changed from absolute, to something else, and back.
	// By being relative when unselected and absolute when selected, we
	// constantly "refresh" this hack.
	position: relative;

	.is-selected & {
		position: absolute;
	}

	top: 0;
	left: 0;
	bottom: 0;
	right: 0;

	>.wpcom-overlay-grid__inner {
		top: 0;
		left: 0;
		bottom: 0;
		right: 0;
		display: grid;
		// grid-gap: $grid-gutter;
		// grid-template-columns: $grid-desktop;
		height: 100%;
		background-color: purple;
		// This padding adds end gutters.
		// padding-left: $grid-gutter;
		// padding-right: $grid-gutter;

		// Lower the z-index so it's under the block borders.
		z-index: 0;
	}

	// Colorize for dark themes also.
	color: rgba(0, 0, 0, 0.03);

	.is-dark-theme & {
		color: rgba(255, 255, 255, 0.15);
	}

	// Solid gutter shading.
	.wpcom-overlay-grid__column {
		transition: border .4s ease;

		// Default gutter.
		.is-selected & {
			box-shadow:
				-(24px / 2) 0 0 0 currentColor,
				(24px / 2) 0 0 0 currentColor;
		}


	}
}

// End gutters and gap.
.wpcom-overlay-grid {
	box-shadow: inset -#{ 24px / 2 } 0 0 0 currentColor,
	inset #{ 24px / 2 } 0 0 0 currentColor;
}



[data-type="vwe/grid"]:not(.is-selected) {
	.vwe-grid-overlay {
		display: none;
	}
}

.vwe-grid-overlay {
	width: 100%;
	height: 100%;
	position: absolute;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	pointer-events: none;
	display: grid;
	z-index: 10;
	align-content: stretch !important;
}



.vwe-grid-overlay.is-resizing {
	z-index: 9999;
	pointer-events: all;

	.vwe-grid-overlay__col {
		background-color: rgb(189 189 189 / 20%);
		width: 100%;
		height: 100%;
		display: block;
		position: relative;

		// &.is-hovered {
		// 	background-color: rgb(189 189 189 / 50%);
		// }
	}
}